# vim: set ts=8 sts=2 sw=2 tw=99 et ft=python:
import os

builder.SetBuildFolder('package')

folder_list = [
    'addons/sourcemod/extensions',
    'addons/sourcemod/scripting/include',
    'tests',
    # 'addons/sourcemod/gamedata',
    # 'addons/sourcemod/configs',
]

if 'x86_64' in Extension.target_archs:
    folder_list.extend([
        'addons/sourcemod/extensions/x64',
        'tests/x64'
    ])

folder_map = {}
for folder in folder_list:
    norm_folder = os.path.normpath(folder)
    folder_map[folder] = builder.AddFolder(norm_folder)


def CopyFiles(src, dest, files):
    if not dest:
        dest = src
    dest_entry = folder_map[dest]
    for source_file in files:
        source_path = os.path.join(builder.sourcePath, src, source_file)
        builder.AddCopy(source_path, dest_entry)


CopyFiles('pawn/scripting/include', 'addons/sourcemod/scripting/include',
          ['filewatcher.inc']
          )

# GameData files
# CopyFiles('gamedata', 'addons/sourcemod/gamedata',
#  [ 'myfile.txt',
#  'file2.txt'
#  ]
# )

# Config Files
# CopyFiles('configs', 'addons/sourcemod/configs',
#  [ 'configfile.cfg',
#  'otherconfig.cfg,
#  ]
# )

for cxx_task in Extension.extensions:
    if cxx_task.target.arch == 'x86_64':
        builder.AddCopy(cxx_task.binary,
                        folder_map['addons/sourcemod/extensions/x64'])
    else:
        builder.AddCopy(cxx_task.binary,
                        folder_map['addons/sourcemod/extensions'])

for arch in Extension.tests:
    binary = Extension.tests[arch]
    if arch == 'x86_64':
        builder.AddCopy(binary,
                        folder_map['tests/x64'])
    else:
        builder.AddCopy(binary,
                        folder_map['tests'])
